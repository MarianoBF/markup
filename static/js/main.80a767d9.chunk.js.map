{"version":3,"sources":["components/Editor.js","components/Previsualizador.js","App.js","reportWebVitals.js","index.js"],"names":["Editor","id","href","target","rel","className","defaultValue","this","props","codigo","onChange","onHandleChange","React","Component","Previsualizador","pre_texto","marked","codigo2","breaks","texto","__html","DOMPurify","sanitize","dangerouslySetInnerHTML","App","state","event","setState","value","bind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAsBeA,G,6KAhBP,OACJ,qCACA,sBAAKC,GAAG,aAAR,UACA,gDACA,+IACA,mBAAGC,KAAK,6CAA6CC,OAAO,SAASC,IAAI,sBAAzE,SAA+F,oFAE/F,sBAAKH,GAAG,mBAAR,UACA,mBAAGI,UAAU,SAAb,oBACA,0BAAUJ,GAAG,SAASK,aAAcC,KAAKC,MAAMC,OAAQC,SAAUH,KAAKC,MAAMG,2B,GAZ3DC,IAAMC,Y,gCCwBVC,E,uKAdb,IAAIC,EAAYC,IAAOT,KAAKC,MAAMS,QAAS,CAAEC,QAAQ,IACjDC,EAAQ,CAACC,OAAQC,IAAUC,SAASP,IACxC,OACE,sBAAKd,GAAG,oBAAR,UACI,mBAAGI,UAAU,SAAb,6BAEQ,qBAAKJ,GAAG,UAAUsB,wBAAyBJ,W,GAX/BP,IAAMC,WC2CrBW,E,kDA7Cb,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IACDiB,MAAQ,CAAEhB,OAAO,0dAFL,E,2DA4BNiB,GACbnB,KAAKoB,SAAS,CACVlB,OAAQiB,EAAMvB,OAAOyB,U,+BAKzB,OACA,qCACA,cAAC,EAAD,CAAQnB,OAAUF,KAAKkB,MAAMhB,OAAQE,eAAgBJ,KAAKI,eAAekB,KAAKtB,QAC9E,uBACA,cAAC,EAAD,CAAiBU,QAAWV,KAAKkB,MAAMhB,gB,GAxCvBG,IAAMC,WCOTiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.80a767d9.chunk.js","sourcesContent":["import React from \"react\";\n\n\nclass Editor extends React.Component {\n\n    render () {\n        return (\n    <>\n    <div id=\"referencia\">\n    <p>¡Bienvenido!</p>\n    <p>Este editor permite escribir en markdown en la ventana \"editor\" y que se renderice abajo en \"previsualizador\".</p>\n    <a href=\"https://www.markdownguide.org/cheat-sheet/\" target=\"_blank\" rel=\"noopener noreferrer\"><p>Referencia: cheat-sheet del código markdown</p></a>\n    </div>\n    <div id=\"container-editor\">\n    <p className=\"titulo\">Editor</p>\n    <textarea id=\"editor\" defaultValue={this.props.codigo} onChange={this.props.onHandleChange}></textarea>\n    </div>\n    </>\n  );\n}\n}\n\nexport default Editor;\n\n","import React from \"react\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\n\n\n\n\n\nclass Previsualizador extends React.Component {\n\n  render () {\n\n \n    let pre_texto = marked(this.props.codigo2, { breaks: true })\n    let texto = {__html: DOMPurify.sanitize(pre_texto)}\n    return (\n      <div id=\"container-preview\">\n          <p className=\"titulo\">Previsualizador</p>\n\n                  <div id=\"preview\" dangerouslySetInnerHTML={texto}>\n      </div>\n      </div>\n    );\n  }\n}\n\n\n  export default Previsualizador;\n  \n  ","import './App.css';\nimport Editor from './components/Editor';\nimport Previsualizador from './components/Previsualizador';\nimport React from \"react\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { codigo: `\nAlgunos ejemplos:\n# Un título (H1)\n## Un subtítulo (H2)\nUn [enlace](http://www.google.com)    \nUn poco de \\`<p>codigo codigo codigo</p>\\` Inline     \n\n        Un bloque de código \n        Un bloque de código \n        Un bloque de código \n\n- Unos\n- items \n- en lista\n\n> Una blockquote \n> blockquote \n> blockquote\n\nUna imagen:  ![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)    \n\n**O texto en negrita**.\n    \n    ` };\n}\n\nonHandleChange(event) {\n  this.setState({\n      codigo: event.target.value\n  });\n}    \n\n  render () {\n  return (\n  <>\n  <Editor codigo = {this.state.codigo} onHandleChange={this.onHandleChange.bind(this)}/>\n  <hr />\n  <Previsualizador codigo2 = {this.state.codigo}/>\n  </>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}